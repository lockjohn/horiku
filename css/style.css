@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');
/* universal reset with '*' selector, border-box allows changes to padding/margin on elements without effecting the width */

/* defining a variable in the 'root' scope  */
:root {
    --primary-color: #047aed;
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body {
    font-family: 'Lato', sans-serif;
    color: #333;
    line-height: 1.6;
}

ul {
    /* remove bulletpoints on list items */
    list-style-type: none;
}

a {
    /* remove underline on links */
    text-decoration: none;
    color: #333;
}

h1, h2 {
    font-weight: 300;
    line-height: 1.2;
    /* 10 on top and bttm margins, zero on left/right */
    margin: 10px 0;
}

p {
    margin: 10px 0;
}

img {
    /* set the image width so no matter size it won't spill out of it's container */
    width: 100%;
}

/* Navbar */
.navbar {
    background-color: var(--primary-color);
    color: #fff;
    height: 70px;
}

.navbar ul {
    display: flex;
}

.navbar a  {
    color: white;
    padding: 10px;
    margin: 0 5px;
}

.navbar a:hover {
    border-bottom: 2px #fff solid;
}

.navbar .flex {
    justify-content: space-between;
}

/* Showcase */
.showcase {
    background-color: var(--primary-color);
    height: 400px;
    color: white;
    position: relative;
}
.showcase h1 {
    font-size: 40px;   
}

.showcase p {
    margin: 20px 0;
}

.showcase .grid {
    grid-template-columns: 55% 45%;
    gap: 30px;
    overflow: visible;
}

.showcase-form {
    position: relative;
    top: 60px;
    /* to use the top feature needs to have a fixed position */
    height: 350px; 
    /* this causes the overflow of the form element from it's container, making a scroll bar appear, but we want it to spill over border so we change the showcase grid to overflow visible */
    width: 400px;
    padding: 40px;
    z-index: 100;
    justify-self: flex-end;    
}

/* Utilities */
.container {
    max-width: 1100px;
    margin: 0 auto;
    overflow: auto;
    padding: 0 40px;    
}

.card {
    color: #333;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 3px 10px rgba(0,0,0,0.2);
    padding: 20px;
    margin: 10px;
}

.flex {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

.grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    justify-content: center;
    align-items: center; 
    /* the cross axis needs a height to center  therefore:*/
    height: 100%;
    /* now the grid element takes up 100% of container which has a height of 400px */
}

